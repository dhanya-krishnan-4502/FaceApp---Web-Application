{"ast":null,"code":"import { TfjsImageRecognitionBase } from 'tfjs-image-recognition-base';\nexport function extractorsFactory(extractWeights, paramMappings) {\n  var extractConvParams = TfjsImageRecognitionBase.extractConvParamsFactory(extractWeights, paramMappings);\n  var extractSeparableConvParams = TfjsImageRecognitionBase.extractSeparableConvParamsFactory(extractWeights, paramMappings);\n  function extractDenseBlock3Params(channelsIn, channelsOut, mappedPrefix, isFirstLayer) {\n    if (isFirstLayer === void 0) {\n      isFirstLayer = false;\n    }\n    var conv0 = isFirstLayer ? extractConvParams(channelsIn, channelsOut, 3, mappedPrefix + \"/conv0\") : extractSeparableConvParams(channelsIn, channelsOut, mappedPrefix + \"/conv0\");\n    var conv1 = extractSeparableConvParams(channelsOut, channelsOut, mappedPrefix + \"/conv1\");\n    var conv2 = extractSeparableConvParams(channelsOut, channelsOut, mappedPrefix + \"/conv2\");\n    return {\n      conv0: conv0,\n      conv1: conv1,\n      conv2: conv2\n    };\n  }\n  function extractDenseBlock4Params(channelsIn, channelsOut, mappedPrefix, isFirstLayer) {\n    if (isFirstLayer === void 0) {\n      isFirstLayer = false;\n    }\n    var _a = extractDenseBlock3Params(channelsIn, channelsOut, mappedPrefix, isFirstLayer),\n      conv0 = _a.conv0,\n      conv1 = _a.conv1,\n      conv2 = _a.conv2;\n    var conv3 = extractSeparableConvParams(channelsOut, channelsOut, mappedPrefix + \"/conv3\");\n    return {\n      conv0: conv0,\n      conv1: conv1,\n      conv2: conv2,\n      conv3: conv3\n    };\n  }\n  return {\n    extractDenseBlock3Params: extractDenseBlock3Params,\n    extractDenseBlock4Params: extractDenseBlock4Params\n  };\n}","map":{"version":3,"names":["TfjsImageRecognitionBase","extractorsFactory","extractWeights","paramMappings","extractConvParams","extractConvParamsFactory","extractSeparableConvParams","extractSeparableConvParamsFactory","extractDenseBlock3Params","channelsIn","channelsOut","mappedPrefix","isFirstLayer","conv0","conv1","conv2","extractDenseBlock4Params","_a","conv3"],"sources":["/Users/dhanya/node_modules/face-api.js/src/faceFeatureExtractor/extractorsFactory.ts"],"sourcesContent":["import { TfjsImageRecognitionBase } from 'tfjs-image-recognition-base';\r\n\r\nimport { DenseBlock3Params, DenseBlock4Params } from './types';\r\n\r\nexport function extractorsFactory(extractWeights: TfjsImageRecognitionBase.ExtractWeightsFunction, paramMappings: TfjsImageRecognitionBase.ParamMapping[]) {\r\n\r\n  const extractConvParams = TfjsImageRecognitionBase.extractConvParamsFactory(extractWeights, paramMappings)\r\n  const extractSeparableConvParams = TfjsImageRecognitionBase.extractSeparableConvParamsFactory(extractWeights, paramMappings)\r\n\r\n  function extractDenseBlock3Params(channelsIn: number, channelsOut: number, mappedPrefix: string, isFirstLayer: boolean = false): DenseBlock3Params {\r\n\r\n    const conv0 = isFirstLayer\r\n      ? extractConvParams(channelsIn, channelsOut, 3, `${mappedPrefix}/conv0`)\r\n      : extractSeparableConvParams(channelsIn, channelsOut, `${mappedPrefix}/conv0`)\r\n    const conv1 = extractSeparableConvParams(channelsOut, channelsOut, `${mappedPrefix}/conv1`)\r\n    const conv2 = extractSeparableConvParams(channelsOut, channelsOut, `${mappedPrefix}/conv2`)\r\n\r\n    return { conv0, conv1, conv2 }\r\n  }\r\n\r\n  function extractDenseBlock4Params(channelsIn: number, channelsOut: number, mappedPrefix: string, isFirstLayer: boolean = false): DenseBlock4Params {\r\n\r\n    const { conv0, conv1, conv2 } = extractDenseBlock3Params(channelsIn, channelsOut, mappedPrefix, isFirstLayer)\r\n    const conv3 = extractSeparableConvParams(channelsOut, channelsOut, `${mappedPrefix}/conv3`)\r\n\r\n    return { conv0, conv1, conv2, conv3 }\r\n  }\r\n\r\n  return {\r\n    extractDenseBlock3Params,\r\n    extractDenseBlock4Params\r\n  }\r\n\r\n}"],"mappings":"AAAA,SAASA,wBAAwB,QAAQ,6BAA6B;AAItE,OAAM,SAAUC,iBAAiBA,CAACC,cAA+D,EAAEC,aAAsD;EAEvJ,IAAMC,iBAAiB,GAAGJ,wBAAwB,CAACK,wBAAwB,CAACH,cAAc,EAAEC,aAAa,CAAC;EAC1G,IAAMG,0BAA0B,GAAGN,wBAAwB,CAACO,iCAAiC,CAACL,cAAc,EAAEC,aAAa,CAAC;EAE5H,SAASK,wBAAwBA,CAACC,UAAkB,EAAEC,WAAmB,EAAEC,YAAoB,EAAEC,YAA6B;IAA7B,IAAAA,YAAA;MAAAA,YAAA,QAA6B;IAAA;IAE5H,IAAMC,KAAK,GAAGD,YAAY,GACtBR,iBAAiB,CAACK,UAAU,EAAEC,WAAW,EAAE,CAAC,EAAKC,YAAY,WAAQ,CAAC,GACtEL,0BAA0B,CAACG,UAAU,EAAEC,WAAW,EAAKC,YAAY,WAAQ,CAAC;IAChF,IAAMG,KAAK,GAAGR,0BAA0B,CAACI,WAAW,EAAEA,WAAW,EAAKC,YAAY,WAAQ,CAAC;IAC3F,IAAMI,KAAK,GAAGT,0BAA0B,CAACI,WAAW,EAAEA,WAAW,EAAKC,YAAY,WAAQ,CAAC;IAE3F,OAAO;MAAEE,KAAK,EAAAA,KAAA;MAAEC,KAAK,EAAAA,KAAA;MAAEC,KAAK,EAAAA;IAAA,CAAE;EAChC;EAEA,SAASC,wBAAwBA,CAACP,UAAkB,EAAEC,WAAmB,EAAEC,YAAoB,EAAEC,YAA6B;IAA7B,IAAAA,YAAA;MAAAA,YAAA,QAA6B;IAAA;IAEtH,IAAAK,EAAA,GAAAT,wBAAA,CAAAC,UAAA,EAAAC,WAAA,EAAAC,YAAA,EAAAC,YAAA,CAAuG;MAArGC,KAAA,GAAAI,EAAA,CAAAJ,KAAK;MAAEC,KAAA,GAAAG,EAAA,CAAAH,KAAK;MAAEC,KAAA,GAAAE,EAAA,CAAAF,KAAuF;IAC7G,IAAMG,KAAK,GAAGZ,0BAA0B,CAACI,WAAW,EAAEA,WAAW,EAAKC,YAAY,WAAQ,CAAC;IAE3F,OAAO;MAAEE,KAAK,EAAAA,KAAA;MAAEC,KAAK,EAAAA,KAAA;MAAEC,KAAK,EAAAA,KAAA;MAAEG,KAAK,EAAAA;IAAA,CAAE;EACvC;EAEA,OAAO;IACLV,wBAAwB,EAAAA,wBAAA;IACxBQ,wBAAwB,EAAAA;GACzB;AAEH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}