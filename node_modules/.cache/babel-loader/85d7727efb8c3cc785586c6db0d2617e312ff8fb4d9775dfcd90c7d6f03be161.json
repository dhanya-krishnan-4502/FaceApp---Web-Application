{"ast":null,"code":"import * as tf from '@tensorflow/tfjs-core';\nimport { TfjsImageRecognitionBase } from 'tfjs-image-recognition-base';\nimport { prelu } from './prelu';\nexport function sharedLayer(x, params, isPnet) {\n  if (isPnet === void 0) {\n    isPnet = false;\n  }\n  return tf.tidy(function () {\n    var out = TfjsImageRecognitionBase.convLayer(x, params.conv1, 'valid');\n    out = prelu(out, params.prelu1_alpha);\n    out = tf.maxPool(out, isPnet ? [2, 2] : [3, 3], [2, 2], 'same');\n    out = TfjsImageRecognitionBase.convLayer(out, params.conv2, 'valid');\n    out = prelu(out, params.prelu2_alpha);\n    out = isPnet ? out : tf.maxPool(out, [3, 3], [2, 2], 'valid');\n    out = TfjsImageRecognitionBase.convLayer(out, params.conv3, 'valid');\n    out = prelu(out, params.prelu3_alpha);\n    return out;\n  });\n}","map":{"version":3,"names":["tf","TfjsImageRecognitionBase","prelu","sharedLayer","x","params","isPnet","tidy","out","convLayer","conv1","prelu1_alpha","maxPool","conv2","prelu2_alpha","conv3","prelu3_alpha"],"sources":["/Users/dhanya/node_modules/face-api.js/src/mtcnn/sharedLayers.ts"],"sourcesContent":["import * as tf from '@tensorflow/tfjs-core';\r\nimport { TfjsImageRecognitionBase } from 'tfjs-image-recognition-base';\r\n\r\nimport { prelu } from './prelu';\r\nimport { SharedParams } from './types';\r\n\r\nexport function sharedLayer(x: tf.Tensor4D, params: SharedParams, isPnet: boolean = false) {\r\n  return tf.tidy(() => {\r\n\r\n    let out = TfjsImageRecognitionBase.convLayer(x, params.conv1, 'valid')\r\n    out = prelu<tf.Tensor4D>(out, params.prelu1_alpha)\r\n    out = tf.maxPool(out, isPnet ? [2, 2]: [3, 3], [2, 2], 'same')\r\n    out = TfjsImageRecognitionBase.convLayer(out, params.conv2, 'valid')\r\n    out = prelu<tf.Tensor4D>(out, params.prelu2_alpha)\r\n    out = isPnet ? out : tf.maxPool(out, [3, 3], [2, 2], 'valid')\r\n    out = TfjsImageRecognitionBase.convLayer(out, params.conv3, 'valid')\r\n    out = prelu<tf.Tensor4D>(out, params.prelu3_alpha)\r\n\r\n    return out\r\n  })\r\n}"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,uBAAuB;AAC3C,SAASC,wBAAwB,QAAQ,6BAA6B;AAEtE,SAASC,KAAK,QAAQ,SAAS;AAG/B,OAAM,SAAUC,WAAWA,CAACC,CAAc,EAAEC,MAAoB,EAAEC,MAAuB;EAAvB,IAAAA,MAAA;IAAAA,MAAA,QAAuB;EAAA;EACvF,OAAON,EAAE,CAACO,IAAI,CAAC;IAEb,IAAIC,GAAG,GAAGP,wBAAwB,CAACQ,SAAS,CAACL,CAAC,EAAEC,MAAM,CAACK,KAAK,EAAE,OAAO,CAAC;IACtEF,GAAG,GAAGN,KAAK,CAAcM,GAAG,EAAEH,MAAM,CAACM,YAAY,CAAC;IAClDH,GAAG,GAAGR,EAAE,CAACY,OAAO,CAACJ,GAAG,EAAEF,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC;IAC9DE,GAAG,GAAGP,wBAAwB,CAACQ,SAAS,CAACD,GAAG,EAAEH,MAAM,CAACQ,KAAK,EAAE,OAAO,CAAC;IACpEL,GAAG,GAAGN,KAAK,CAAcM,GAAG,EAAEH,MAAM,CAACS,YAAY,CAAC;IAClDN,GAAG,GAAGF,MAAM,GAAGE,GAAG,GAAGR,EAAE,CAACY,OAAO,CAACJ,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,CAAC;IAC7DA,GAAG,GAAGP,wBAAwB,CAACQ,SAAS,CAACD,GAAG,EAAEH,MAAM,CAACU,KAAK,EAAE,OAAO,CAAC;IACpEP,GAAG,GAAGN,KAAK,CAAcM,GAAG,EAAEH,MAAM,CAACW,YAAY,CAAC;IAElD,OAAOR,GAAG;EACZ,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}