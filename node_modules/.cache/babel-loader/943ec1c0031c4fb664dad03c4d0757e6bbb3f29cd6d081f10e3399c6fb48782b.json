{"ast":null,"code":"import { TfjsImageRecognitionBase } from 'tfjs-image-recognition-base';\nexport function extractParamsFromWeigthMap(weightMap) {\n  var paramMappings = [];\n  var extractWeightEntry = TfjsImageRecognitionBase.extractWeightEntryFactory(weightMap, paramMappings);\n  function extractFcParams(prefix) {\n    var weights = extractWeightEntry(prefix + \"/weights\", 2);\n    var bias = extractWeightEntry(prefix + \"/bias\", 1);\n    return {\n      weights: weights,\n      bias: bias\n    };\n  }\n  var params = {\n    fc: extractFcParams('fc')\n  };\n  TfjsImageRecognitionBase.disposeUnusedWeightTensors(weightMap, paramMappings);\n  return {\n    params: params,\n    paramMappings: paramMappings\n  };\n}","map":{"version":3,"names":["TfjsImageRecognitionBase","extractParamsFromWeigthMap","weightMap","paramMappings","extractWeightEntry","extractWeightEntryFactory","extractFcParams","prefix","weights","bias","params","fc","disposeUnusedWeightTensors"],"sources":["/Users/dhanya/node_modules/face-api.js/src/faceProcessor/extractParamsFromWeigthMap.ts"],"sourcesContent":["import * as tf from '@tensorflow/tfjs-core';\r\nimport { TfjsImageRecognitionBase } from 'tfjs-image-recognition-base';\r\n\r\nimport { NetParams } from './types';\r\n\r\nexport function extractParamsFromWeigthMap(\r\n  weightMap: tf.NamedTensorMap\r\n): { params: NetParams, paramMappings: TfjsImageRecognitionBase.ParamMapping[] } {\r\n\r\n  const paramMappings: TfjsImageRecognitionBase.ParamMapping[] = []\r\n\r\n  const extractWeightEntry = TfjsImageRecognitionBase.extractWeightEntryFactory(weightMap, paramMappings)\r\n\r\n  function extractFcParams(prefix: string): TfjsImageRecognitionBase.FCParams {\r\n    const weights = extractWeightEntry<tf.Tensor2D>(`${prefix}/weights`, 2)\r\n    const bias = extractWeightEntry<tf.Tensor1D>(`${prefix}/bias`, 1)\r\n    return { weights, bias }\r\n  }\r\n\r\n  const params = {\r\n    fc: extractFcParams('fc')\r\n  }\r\n\r\n  TfjsImageRecognitionBase.disposeUnusedWeightTensors(weightMap, paramMappings)\r\n\r\n  return { params, paramMappings }\r\n}"],"mappings":"AACA,SAASA,wBAAwB,QAAQ,6BAA6B;AAItE,OAAM,SAAUC,0BAA0BA,CACxCC,SAA4B;EAG5B,IAAMC,aAAa,GAA4C,EAAE;EAEjE,IAAMC,kBAAkB,GAAGJ,wBAAwB,CAACK,yBAAyB,CAACH,SAAS,EAAEC,aAAa,CAAC;EAEvG,SAASG,eAAeA,CAACC,MAAc;IACrC,IAAMC,OAAO,GAAGJ,kBAAkB,CAAiBG,MAAM,aAAU,EAAE,CAAC,CAAC;IACvE,IAAME,IAAI,GAAGL,kBAAkB,CAAiBG,MAAM,UAAO,EAAE,CAAC,CAAC;IACjE,OAAO;MAAEC,OAAO,EAAAA,OAAA;MAAEC,IAAI,EAAAA;IAAA,CAAE;EAC1B;EAEA,IAAMC,MAAM,GAAG;IACbC,EAAE,EAAEL,eAAe,CAAC,IAAI;GACzB;EAEDN,wBAAwB,CAACY,0BAA0B,CAACV,SAAS,EAAEC,aAAa,CAAC;EAE7E,OAAO;IAAEO,MAAM,EAAAA,MAAA;IAAEP,aAAa,EAAAA;EAAA,CAAE;AAClC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}