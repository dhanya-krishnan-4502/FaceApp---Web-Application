{"ast":null,"code":"var _jsxFileName = \"/Users/dhanya/FaceAppDemo/FaceApp/src/FaceRecognition.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './FaceDetection.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FaceRecognition = () => {\n  _s();\n  const [imageUrl, setImageUrl] = useState('');\n  const [result, setResult] = useState('');\n  const [isImageReceived, setIsImageReceived] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleFileChange = async event => {\n    const file = event.target.files[0];\n    if (!file) return; // Ensure a file is selected\n\n    const formData = new FormData();\n    formData.append('image', file);\n    try {\n      var _data$recognizedFaces;\n      setIsLoading(true); // Show loading animation\n\n      const response = await fetch('http://localhost:8000/face-recognition', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Error recognizing face.');\n      }\n      const data = await response.json();\n      console.log('Recognition result:', data);\n      if (data.imageUrl) {\n        setImageUrl(data.imageUrl); // Ensure the image is displayed\n        setIsImageReceived(true);\n      } else {\n        console.error('No image data received.');\n      }\n      if (((_data$recognizedFaces = data.recognizedFaces) === null || _data$recognizedFaces === void 0 ? void 0 : _data$recognizedFaces.length) > 0) {\n        setResult(`Recognized as: ${data.recognizedFaces.join(', ')}`);\n      } else {\n        setResult('No known faces detected.');\n      }\n    } catch (error) {\n      console.error('❌ Face recognition error:', error.message);\n      setResult('Error recognizing face.');\n    } finally {\n      setIsLoading(false); // Hide loading animation\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Face Recognition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Processing image...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: \"Recognized face\",\n        style: {\n          maxWidth: '300px',\n          marginBottom: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No image available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), isImageReceived && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Recognition result: \", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(FaceRecognition, \"wic9qZx4f1AbhvD4bNZswhaKXjQ=\");\n_c = FaceRecognition;\nexport default FaceRecognition;\nvar _c;\n$RefreshReg$(_c, \"FaceRecognition\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","FaceRecognition","_s","imageUrl","setImageUrl","result","setResult","isImageReceived","setIsImageReceived","isLoading","setIsLoading","handleFileChange","event","file","target","files","formData","FormData","append","_data$recognizedFaces","response","fetch","method","body","ok","errorData","json","Error","message","data","console","log","error","recognizedFaces","length","join","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","style","maxWidth","marginBottom","type","accept","onChange","_c","$RefreshReg$"],"sources":["/Users/dhanya/FaceAppDemo/FaceApp/src/FaceRecognition.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './FaceDetection.css';\n\n\nconst FaceRecognition = () => {\n  const [imageUrl, setImageUrl] = useState('');\n  const [result, setResult] = useState('');\n  const [isImageReceived, setIsImageReceived] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleFileChange = async (event) => {\n    const file = event.target.files[0];\n    if (!file) return; // Ensure a file is selected\n\n    const formData = new FormData();\n    formData.append('image', file);\n\n    try {\n      setIsLoading(true); // Show loading animation\n\n      const response = await fetch('http://localhost:8000/face-recognition', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Error recognizing face.');\n      }\n\n      const data = await response.json();\n      console.log('Recognition result:', data);\n\n      if (data.imageUrl) {\n        setImageUrl(data.imageUrl);  // Ensure the image is displayed\n        setIsImageReceived(true);\n      } else {\n        console.error('No image data received.');\n      }\n\n      if (data.recognizedFaces?.length > 0) {\n        setResult(`Recognized as: ${data.recognizedFaces.join(', ')}`);\n      } else {\n        setResult('No known faces detected.');\n      }\n    } catch (error) {\n      console.error('❌ Face recognition error:', error.message);\n      setResult('Error recognizing face.');\n    } finally {\n      setIsLoading(false); // Hide loading animation\n    }\n  };\n\n  return (\n    <div>\n      <h2>Face Recognition</h2>\n      {isLoading ? (\n        <>\n          <br />\n          <br />\n          <p>Processing image...</p>\n          <div className=\"loader\"></div>\n          <br />\n        </>\n      ) : (\n        <>\n          {imageUrl ? (\n            <img\n              src={imageUrl}\n              alt=\"Recognized face\"\n              style={{ maxWidth: '300px', marginBottom: '10px' }}\n            />\n          ) : (\n            <p>No image available</p>\n          )}\n          {isImageReceived && <p>Recognition result: {result}</p>}\n          <br />\n          <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default FaceRecognition;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}