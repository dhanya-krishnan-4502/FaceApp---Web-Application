{"ast":null,"code":"import { range, TfjsImageRecognitionBase } from 'tfjs-image-recognition-base';\nfunction extractorsFactory(extractWeights, paramMappings) {\n  var extractConvParams = TfjsImageRecognitionBase.extractConvParamsFactory(extractWeights, paramMappings);\n  var extractSeparableConvParams = TfjsImageRecognitionBase.extractSeparableConvParamsFactory(extractWeights, paramMappings);\n  function extractReductionBlockParams(channelsIn, channelsOut, mappedPrefix) {\n    var separable_conv0 = extractSeparableConvParams(channelsIn, channelsOut, mappedPrefix + \"/separable_conv0\");\n    var separable_conv1 = extractSeparableConvParams(channelsOut, channelsOut, mappedPrefix + \"/separable_conv1\");\n    var expansion_conv = extractConvParams(channelsIn, channelsOut, 1, mappedPrefix + \"/expansion_conv\");\n    return {\n      separable_conv0: separable_conv0,\n      separable_conv1: separable_conv1,\n      expansion_conv: expansion_conv\n    };\n  }\n  function extractMainBlockParams(channels, mappedPrefix) {\n    var separable_conv0 = extractSeparableConvParams(channels, channels, mappedPrefix + \"/separable_conv0\");\n    var separable_conv1 = extractSeparableConvParams(channels, channels, mappedPrefix + \"/separable_conv1\");\n    var separable_conv2 = extractSeparableConvParams(channels, channels, mappedPrefix + \"/separable_conv2\");\n    return {\n      separable_conv0: separable_conv0,\n      separable_conv1: separable_conv1,\n      separable_conv2: separable_conv2\n    };\n  }\n  return {\n    extractConvParams: extractConvParams,\n    extractSeparableConvParams: extractSeparableConvParams,\n    extractReductionBlockParams: extractReductionBlockParams,\n    extractMainBlockParams: extractMainBlockParams\n  };\n}\nexport function extractParams(weights, numMainBlocks) {\n  var paramMappings = [];\n  var _a = TfjsImageRecognitionBase.extractWeightsFactory(weights),\n    extractWeights = _a.extractWeights,\n    getRemainingWeights = _a.getRemainingWeights;\n  var _b = extractorsFactory(extractWeights, paramMappings),\n    extractConvParams = _b.extractConvParams,\n    extractSeparableConvParams = _b.extractSeparableConvParams,\n    extractReductionBlockParams = _b.extractReductionBlockParams,\n    extractMainBlockParams = _b.extractMainBlockParams;\n  var entry_flow_conv_in = extractConvParams(3, 32, 3, 'entry_flow/conv_in');\n  var entry_flow_reduction_block_0 = extractReductionBlockParams(32, 64, 'entry_flow/reduction_block_0');\n  var entry_flow_reduction_block_1 = extractReductionBlockParams(64, 128, 'entry_flow/reduction_block_1');\n  var entry_flow = {\n    conv_in: entry_flow_conv_in,\n    reduction_block_0: entry_flow_reduction_block_0,\n    reduction_block_1: entry_flow_reduction_block_1\n  };\n  var middle_flow = {};\n  range(numMainBlocks, 0, 1).forEach(function (idx) {\n    middle_flow[\"main_block_\" + idx] = extractMainBlockParams(128, \"middle_flow/main_block_\" + idx);\n  });\n  var exit_flow_reduction_block = extractReductionBlockParams(128, 256, 'exit_flow/reduction_block');\n  var exit_flow_separable_conv = extractSeparableConvParams(256, 512, 'exit_flow/separable_conv');\n  var exit_flow = {\n    reduction_block: exit_flow_reduction_block,\n    separable_conv: exit_flow_separable_conv\n  };\n  if (getRemainingWeights().length !== 0) {\n    throw new Error(\"weights remaing after extract: \" + getRemainingWeights().length);\n  }\n  return {\n    paramMappings: paramMappings,\n    params: {\n      entry_flow: entry_flow,\n      middle_flow: middle_flow,\n      exit_flow: exit_flow\n    }\n  };\n}","map":{"version":3,"names":["range","TfjsImageRecognitionBase","extractorsFactory","extractWeights","paramMappings","extractConvParams","extractConvParamsFactory","extractSeparableConvParams","extractSeparableConvParamsFactory","extractReductionBlockParams","channelsIn","channelsOut","mappedPrefix","separable_conv0","separable_conv1","expansion_conv","extractMainBlockParams","channels","separable_conv2","extractParams","weights","numMainBlocks","_a","extractWeightsFactory","getRemainingWeights","_b","entry_flow_conv_in","entry_flow_reduction_block_0","entry_flow_reduction_block_1","entry_flow","conv_in","reduction_block_0","reduction_block_1","middle_flow","forEach","idx","exit_flow_reduction_block","exit_flow_separable_conv","exit_flow","reduction_block","separable_conv","length","Error","params"],"sources":["/Users/dhanya/node_modules/face-api.js/src/xception/extractParams.ts"],"sourcesContent":["import { range, TfjsImageRecognitionBase } from 'tfjs-image-recognition-base';\r\n\r\nimport { MainBlockParams, ReductionBlockParams, TinyXceptionParams } from './types';\r\n\r\nfunction extractorsFactory(extractWeights: TfjsImageRecognitionBase.ExtractWeightsFunction, paramMappings: TfjsImageRecognitionBase.ParamMapping[]) {\r\n\r\n  const extractConvParams = TfjsImageRecognitionBase.extractConvParamsFactory(extractWeights, paramMappings)\r\n  const extractSeparableConvParams = TfjsImageRecognitionBase.extractSeparableConvParamsFactory(extractWeights, paramMappings)\r\n\r\n  function extractReductionBlockParams(channelsIn: number, channelsOut: number, mappedPrefix: string): ReductionBlockParams {\r\n\r\n    const separable_conv0 = extractSeparableConvParams(channelsIn, channelsOut, `${mappedPrefix}/separable_conv0`)\r\n    const separable_conv1 = extractSeparableConvParams(channelsOut, channelsOut, `${mappedPrefix}/separable_conv1`)\r\n    const expansion_conv = extractConvParams(channelsIn, channelsOut, 1, `${mappedPrefix}/expansion_conv`)\r\n\r\n    return { separable_conv0, separable_conv1, expansion_conv }\r\n  }\r\n\r\n  function extractMainBlockParams(channels: number, mappedPrefix: string): MainBlockParams {\r\n\r\n    const separable_conv0 = extractSeparableConvParams(channels, channels, `${mappedPrefix}/separable_conv0`)\r\n    const separable_conv1 = extractSeparableConvParams(channels, channels, `${mappedPrefix}/separable_conv1`)\r\n    const separable_conv2 = extractSeparableConvParams(channels, channels, `${mappedPrefix}/separable_conv2`)\r\n\r\n    return { separable_conv0, separable_conv1, separable_conv2 }\r\n  }\r\n\r\n  return {\r\n    extractConvParams,\r\n    extractSeparableConvParams,\r\n    extractReductionBlockParams,\r\n    extractMainBlockParams\r\n  }\r\n\r\n}\r\n\r\nexport function extractParams(weights: Float32Array, numMainBlocks: number): { params: TinyXceptionParams, paramMappings: TfjsImageRecognitionBase.ParamMapping[] } {\r\n\r\n  const paramMappings: TfjsImageRecognitionBase.ParamMapping[] = []\r\n\r\n  const {\r\n    extractWeights,\r\n    getRemainingWeights\r\n  } = TfjsImageRecognitionBase.extractWeightsFactory(weights)\r\n\r\n  const {\r\n    extractConvParams,\r\n    extractSeparableConvParams,\r\n    extractReductionBlockParams,\r\n    extractMainBlockParams\r\n  } = extractorsFactory(extractWeights, paramMappings)\r\n\r\n  const entry_flow_conv_in = extractConvParams(3, 32, 3, 'entry_flow/conv_in')\r\n  const entry_flow_reduction_block_0 = extractReductionBlockParams(32, 64, 'entry_flow/reduction_block_0')\r\n  const entry_flow_reduction_block_1 = extractReductionBlockParams(64, 128, 'entry_flow/reduction_block_1')\r\n\r\n  const entry_flow = {\r\n    conv_in: entry_flow_conv_in,\r\n    reduction_block_0: entry_flow_reduction_block_0,\r\n    reduction_block_1: entry_flow_reduction_block_1\r\n  }\r\n\r\n  const middle_flow = {}\r\n  range(numMainBlocks, 0, 1).forEach((idx) => {\r\n    middle_flow[`main_block_${idx}`] = extractMainBlockParams(128, `middle_flow/main_block_${idx}`)\r\n  })\r\n\r\n  const exit_flow_reduction_block = extractReductionBlockParams(128, 256, 'exit_flow/reduction_block')\r\n  const exit_flow_separable_conv = extractSeparableConvParams(256, 512, 'exit_flow/separable_conv')\r\n\r\n  const exit_flow = {\r\n    reduction_block: exit_flow_reduction_block,\r\n    separable_conv: exit_flow_separable_conv\r\n  }\r\n\r\n  if (getRemainingWeights().length !== 0) {\r\n    throw new Error(`weights remaing after extract: ${getRemainingWeights().length}`)\r\n  }\r\n\r\n  return {\r\n    paramMappings,\r\n    params: { entry_flow, middle_flow, exit_flow }\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}