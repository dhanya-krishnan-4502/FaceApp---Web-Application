{"ast":null,"code":"import { CELL_SIZE } from './config';\nexport function pyramidDown(minFaceSize, scaleFactor, dims) {\n  var height = dims[0],\n    width = dims[1];\n  var m = CELL_SIZE / minFaceSize;\n  var scales = [];\n  var minLayer = Math.min(height, width) * m;\n  var exp = 0;\n  while (minLayer >= 12) {\n    scales.push(m * Math.pow(scaleFactor, exp));\n    minLayer = minLayer * scaleFactor;\n    exp += 1;\n  }\n  return scales;\n}","map":{"version":3,"names":["CELL_SIZE","pyramidDown","minFaceSize","scaleFactor","dims","height","width","m","scales","minLayer","Math","min","exp","push","pow"],"sources":["/Users/dhanya/node_modules/face-api.js/src/mtcnn/pyramidDown.ts"],"sourcesContent":["import { CELL_SIZE } from './config';\r\n\r\nexport function pyramidDown(minFaceSize: number, scaleFactor: number, dims: number[]): number[] {\r\n\r\n  const [height, width] = dims\r\n  const m = CELL_SIZE / minFaceSize\r\n\r\n  const scales = []\r\n\r\n  let minLayer = Math.min(height, width) * m\r\n  let exp = 0\r\n  while (minLayer >= 12) {\r\n    scales.push(m * Math.pow(scaleFactor, exp))\r\n    minLayer = minLayer * scaleFactor\r\n    exp += 1\r\n  }\r\n\r\n  return scales\r\n}"],"mappings":"AAAA,SAASA,SAAS,QAAQ,UAAU;AAEpC,OAAM,SAAUC,WAAWA,CAACC,WAAmB,EAAEC,WAAmB,EAAEC,IAAc;EAE3E,IAAAC,MAAA,GAAAD,IAAA,GAAM;IAAEE,KAAA,GAAAF,IAAA,GAAK;EACpB,IAAMG,CAAC,GAAGP,SAAS,GAAGE,WAAW;EAEjC,IAAMM,MAAM,GAAG,EAAE;EAEjB,IAAIC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACN,MAAM,EAAEC,KAAK,CAAC,GAAGC,CAAC;EAC1C,IAAIK,GAAG,GAAG,CAAC;EACX,OAAOH,QAAQ,IAAI,EAAE,EAAE;IACrBD,MAAM,CAACK,IAAI,CAACN,CAAC,GAAGG,IAAI,CAACI,GAAG,CAACX,WAAW,EAAES,GAAG,CAAC,CAAC;IAC3CH,QAAQ,GAAGA,QAAQ,GAAGN,WAAW;IACjCS,GAAG,IAAI,CAAC;;EAGV,OAAOJ,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}