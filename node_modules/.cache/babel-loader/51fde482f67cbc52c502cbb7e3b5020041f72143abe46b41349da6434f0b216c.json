{"ast":null,"code":"import { TfjsImageRecognitionBase } from 'tfjs-image-recognition-base';\nexport function extractParams(weights, channelsIn, channelsOut) {\n  var paramMappings = [];\n  var _a = TfjsImageRecognitionBase.extractWeightsFactory(weights),\n    extractWeights = _a.extractWeights,\n    getRemainingWeights = _a.getRemainingWeights;\n  var extractFCParams = TfjsImageRecognitionBase.extractFCParamsFactory(extractWeights, paramMappings);\n  var fc = extractFCParams(channelsIn, channelsOut, 'fc');\n  if (getRemainingWeights().length !== 0) {\n    throw new Error(\"weights remaing after extract: \" + getRemainingWeights().length);\n  }\n  return {\n    paramMappings: paramMappings,\n    params: {\n      fc: fc\n    }\n  };\n}","map":{"version":3,"names":["TfjsImageRecognitionBase","extractParams","weights","channelsIn","channelsOut","paramMappings","_a","extractWeightsFactory","extractWeights","getRemainingWeights","extractFCParams","extractFCParamsFactory","fc","length","Error","params"],"sources":["/Users/dhanya/node_modules/face-api.js/src/faceProcessor/extractParams.ts"],"sourcesContent":["import { TfjsImageRecognitionBase } from 'tfjs-image-recognition-base';\r\n\r\nimport { NetParams } from './types';\r\n\r\nexport function extractParams(weights: Float32Array, channelsIn: number, channelsOut: number): { params: NetParams, paramMappings: TfjsImageRecognitionBase.ParamMapping[] } {\r\n\r\n  const paramMappings: TfjsImageRecognitionBase.ParamMapping[] = []\r\n\r\n  const {\r\n    extractWeights,\r\n    getRemainingWeights\r\n  } = TfjsImageRecognitionBase.extractWeightsFactory(weights)\r\n\r\n  const extractFCParams = TfjsImageRecognitionBase.extractFCParamsFactory(extractWeights, paramMappings)\r\n\r\n  const fc = extractFCParams(channelsIn, channelsOut, 'fc')\r\n\r\n  if (getRemainingWeights().length !== 0) {\r\n    throw new Error(`weights remaing after extract: ${getRemainingWeights().length}`)\r\n  }\r\n\r\n  return {\r\n    paramMappings,\r\n    params: { fc }\r\n  }\r\n}"],"mappings":"AAAA,SAASA,wBAAwB,QAAQ,6BAA6B;AAItE,OAAM,SAAUC,aAAaA,CAACC,OAAqB,EAAEC,UAAkB,EAAEC,WAAmB;EAE1F,IAAMC,aAAa,GAA4C,EAAE;EAE3D,IAAAC,EAAA,GAAAN,wBAAA,CAAAO,qBAAA,CAAAL,OAAA,CAGqD;IAFzDM,cAAA,GAAAF,EAAA,CAAAE,cAAc;IACdC,mBAAA,GAAAH,EAAA,CAAAG,mBACyD;EAE3D,IAAMC,eAAe,GAAGV,wBAAwB,CAACW,sBAAsB,CAACH,cAAc,EAAEH,aAAa,CAAC;EAEtG,IAAMO,EAAE,GAAGF,eAAe,CAACP,UAAU,EAAEC,WAAW,EAAE,IAAI,CAAC;EAEzD,IAAIK,mBAAmB,EAAE,CAACI,MAAM,KAAK,CAAC,EAAE;IACtC,MAAM,IAAIC,KAAK,CAAC,oCAAkCL,mBAAmB,EAAE,CAACI,MAAQ,CAAC;;EAGnF,OAAO;IACLR,aAAa,EAAAA,aAAA;IACbU,MAAM,EAAE;MAAEH,EAAE,EAAAA;IAAA;GACb;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}