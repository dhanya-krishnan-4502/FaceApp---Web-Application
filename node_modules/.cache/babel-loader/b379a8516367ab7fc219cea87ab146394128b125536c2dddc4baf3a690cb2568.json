{"ast":null,"code":"import { Box, draw, round } from 'tfjs-image-recognition-base';\nimport { FaceDetection } from '../classes/FaceDetection';\nimport { isWithFaceDetection } from '../factories/WithFaceDetection';\nexport function drawDetections(canvasArg, detections) {\n  var detectionsArray = Array.isArray(detections) ? detections : [detections];\n  detectionsArray.forEach(function (det) {\n    var score = det instanceof FaceDetection ? det.score : isWithFaceDetection(det) ? det.detection.score : undefined;\n    var box = det instanceof FaceDetection ? det.box : isWithFaceDetection(det) ? det.detection.box : new Box(det);\n    var label = score ? \"\" + round(score) : undefined;\n    new draw.DrawBox(box, {\n      label: label\n    }).draw(canvasArg);\n  });\n}","map":{"version":3,"names":["Box","draw","round","FaceDetection","isWithFaceDetection","drawDetections","canvasArg","detections","detectionsArray","Array","isArray","forEach","det","score","detection","undefined","box","label","DrawBox"],"sources":["/Users/dhanya/node_modules/face-api.js/src/draw/drawDetections.ts"],"sourcesContent":["import { Box, draw, IBoundingBox, IRect, round } from 'tfjs-image-recognition-base';\r\n\r\nimport { FaceDetection } from '../classes/FaceDetection';\r\nimport { isWithFaceDetection, WithFaceDetection } from '../factories/WithFaceDetection';\r\n\r\nexport type TDrawDetectionsInput = IRect | IBoundingBox | FaceDetection | WithFaceDetection<{}>\r\n\r\nexport function drawDetections(\r\n  canvasArg: string | HTMLCanvasElement,\r\n  detections: TDrawDetectionsInput | Array<TDrawDetectionsInput>\r\n) {\r\n  const detectionsArray = Array.isArray(detections) ? detections : [detections]\r\n\r\n  detectionsArray.forEach(det => {\r\n    const score = det instanceof FaceDetection\r\n      ? det.score\r\n      : (isWithFaceDetection(det) ? det.detection.score : undefined)\r\n\r\n    const box = det instanceof FaceDetection\r\n      ? det.box\r\n      : (isWithFaceDetection(det) ? det.detection.box : new Box(det))\r\n\r\n    const label = score ? `${round(score)}` : undefined\r\n    new draw.DrawBox(box, { label }).draw(canvasArg)\r\n  })\r\n}"],"mappings":"AAAA,SAASA,GAAG,EAAEC,IAAI,EAAuBC,KAAK,QAAQ,6BAA6B;AAEnF,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,mBAAmB,QAA2B,gCAAgC;AAIvF,OAAM,SAAUC,cAAcA,CAC5BC,SAAqC,EACrCC,UAA8D;EAE9D,IAAMC,eAAe,GAAGC,KAAK,CAACC,OAAO,CAACH,UAAU,CAAC,GAAGA,UAAU,GAAG,CAACA,UAAU,CAAC;EAE7EC,eAAe,CAACG,OAAO,CAAC,UAAAC,GAAG;IACzB,IAAMC,KAAK,GAAGD,GAAG,YAAYT,aAAa,GACtCS,GAAG,CAACC,KAAK,GACRT,mBAAmB,CAACQ,GAAG,CAAC,GAAGA,GAAG,CAACE,SAAS,CAACD,KAAK,GAAGE,SAAU;IAEhE,IAAMC,GAAG,GAAGJ,GAAG,YAAYT,aAAa,GACpCS,GAAG,CAACI,GAAG,GACNZ,mBAAmB,CAACQ,GAAG,CAAC,GAAGA,GAAG,CAACE,SAAS,CAACE,GAAG,GAAG,IAAIhB,GAAG,CAACY,GAAG,CAAE;IAEjE,IAAMK,KAAK,GAAGJ,KAAK,GAAG,KAAGX,KAAK,CAACW,KAAK,CAAG,GAAGE,SAAS;IACnD,IAAId,IAAI,CAACiB,OAAO,CAACF,GAAG,EAAE;MAAEC,KAAK,EAAAA;IAAA,CAAE,CAAC,CAAChB,IAAI,CAACK,SAAS,CAAC;EAClD,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}