{"ast":null,"code":"import { TfjsImageRecognitionBase } from 'tfjs-image-recognition-base';\nimport { extractorsFactory } from './extractorsFactory';\nexport function extractParamsTiny(weights) {\n  var paramMappings = [];\n  var _a = TfjsImageRecognitionBase.extractWeightsFactory(weights),\n    extractWeights = _a.extractWeights,\n    getRemainingWeights = _a.getRemainingWeights;\n  var extractDenseBlock3Params = extractorsFactory(extractWeights, paramMappings).extractDenseBlock3Params;\n  var dense0 = extractDenseBlock3Params(3, 32, 'dense0', true);\n  var dense1 = extractDenseBlock3Params(32, 64, 'dense1');\n  var dense2 = extractDenseBlock3Params(64, 128, 'dense2');\n  if (getRemainingWeights().length !== 0) {\n    throw new Error(\"weights remaing after extract: \" + getRemainingWeights().length);\n  }\n  return {\n    paramMappings: paramMappings,\n    params: {\n      dense0: dense0,\n      dense1: dense1,\n      dense2: dense2\n    }\n  };\n}","map":{"version":3,"names":["TfjsImageRecognitionBase","extractorsFactory","extractParamsTiny","weights","paramMappings","_a","extractWeightsFactory","extractWeights","getRemainingWeights","extractDenseBlock3Params","dense0","dense1","dense2","length","Error","params"],"sources":["/Users/dhanya/node_modules/face-api.js/src/faceFeatureExtractor/extractParamsTiny.ts"],"sourcesContent":["import { TfjsImageRecognitionBase } from 'tfjs-image-recognition-base';\r\n\r\nimport { extractorsFactory } from './extractorsFactory';\r\nimport { TinyFaceFeatureExtractorParams } from './types';\r\n\r\n\r\nexport function extractParamsTiny(weights: Float32Array): { params: TinyFaceFeatureExtractorParams, paramMappings: TfjsImageRecognitionBase.ParamMapping[] } {\r\n\r\n  const paramMappings: TfjsImageRecognitionBase.ParamMapping[] = []\r\n\r\n  const {\r\n    extractWeights,\r\n    getRemainingWeights\r\n  } = TfjsImageRecognitionBase.extractWeightsFactory(weights)\r\n\r\n  const {\r\n    extractDenseBlock3Params\r\n  } = extractorsFactory(extractWeights, paramMappings)\r\n\r\n  const dense0 = extractDenseBlock3Params(3, 32, 'dense0', true)\r\n  const dense1 = extractDenseBlock3Params(32, 64, 'dense1')\r\n  const dense2 = extractDenseBlock3Params(64, 128, 'dense2')\r\n\r\n  if (getRemainingWeights().length !== 0) {\r\n    throw new Error(`weights remaing after extract: ${getRemainingWeights().length}`)\r\n  }\r\n\r\n  return {\r\n    paramMappings,\r\n    params: { dense0, dense1, dense2 }\r\n  }\r\n}"],"mappings":"AAAA,SAASA,wBAAwB,QAAQ,6BAA6B;AAEtE,SAASC,iBAAiB,QAAQ,qBAAqB;AAIvD,OAAM,SAAUC,iBAAiBA,CAACC,OAAqB;EAErD,IAAMC,aAAa,GAA4C,EAAE;EAE3D,IAAAC,EAAA,GAAAL,wBAAA,CAAAM,qBAAA,CAAAH,OAAA,CAGqD;IAFzDI,cAAA,GAAAF,EAAA,CAAAE,cAAc;IACdC,mBAAA,GAAAH,EAAA,CAAAG,mBACyD;EAGzD,IAAAC,wBAAA,GAAAR,iBAAA,CAAAM,cAAA,EAAAH,aAAA,EAAAK,wBAAwB;EAG1B,IAAMC,MAAM,GAAGD,wBAAwB,CAAC,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC;EAC9D,IAAME,MAAM,GAAGF,wBAAwB,CAAC,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC;EACzD,IAAMG,MAAM,GAAGH,wBAAwB,CAAC,EAAE,EAAE,GAAG,EAAE,QAAQ,CAAC;EAE1D,IAAID,mBAAmB,EAAE,CAACK,MAAM,KAAK,CAAC,EAAE;IACtC,MAAM,IAAIC,KAAK,CAAC,oCAAkCN,mBAAmB,EAAE,CAACK,MAAQ,CAAC;;EAGnF,OAAO;IACLT,aAAa,EAAAA,aAAA;IACbW,MAAM,EAAE;MAAEL,MAAM,EAAAA,MAAA;MAAEC,MAAM,EAAAA,MAAA;MAAEC,MAAM,EAAAA;IAAA;GACjC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}