{"ast":null,"code":"var _jsxFileName = \"/Users/dhanya/FaceAppDemo/FaceApp/src/FacialExpression.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as faceapi from 'face-api.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FaceDetection = () => {\n  _s();\n  const [imageUrl, setImageUrl] = useState('');\n  const [expressions, setExpressions] = useState({});\n  const imageRef = useRef(null);\n\n  // Load Face API models on component mount\n  useEffect(() => {\n    const loadModels = async () => {\n      try {\n        await faceapi.nets.ssdMobilenetv1.loadFromUri('/models');\n        await faceapi.nets.faceExpressionNet.loadFromUri('/models');\n        console.log('Face API models loaded successfully.');\n      } catch (error) {\n        console.error('Error loading Face API models:', error);\n      }\n    };\n    loadModels();\n  }, []);\n\n  // Detect facial expressions\n  const detectExpressions = async () => {\n    if (!imageRef.current) return;\n    try {\n      const detections = await faceapi.detectSingleFace(imageRef.current).withFaceExpressions();\n      if (detections) {\n        setExpressions(detections.expressions);\n      } else {\n        setExpressions({});\n        console.warn('No face detected.');\n      }\n    } catch (error) {\n      console.error('Error detecting facial expressions:', error);\n    }\n  };\n\n  // Handle file selection and process the image\n  const handleFileChange = async event => {\n    const file = event.target.files[0];\n    if (!file) {\n      console.error('No file selected.');\n      return;\n    }\n    if (!(file instanceof Blob)) {\n      console.error('Invalid file format.');\n      return;\n    }\n    const imageUrl = URL.createObjectURL(file);\n    setImageUrl(imageUrl);\n\n    // Wait for the image to load before detecting expressions\n    setTimeout(detectExpressions, 500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Facial Expression Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), imageUrl && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        ref: imageRef,\n        src: imageUrl,\n        alt: \"User's image\",\n        style: {\n          maxWidth: '300px',\n          marginBottom: '10px'\n        },\n        onLoad: detectExpressions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Detected Expressions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), Object.keys(expressions).length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.entries(expressions).map(([expression, confidence]) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [expression, \": \", (confidence * 100).toFixed(2), \"%\"]\n        }, expression, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No expressions detected.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(FaceDetection, \"n8D/NrXQubUn4o5zgVwDrVkr5dY=\");\n_c = FaceDetection;\nexport default FaceDetection;\nvar _c;\n$RefreshReg$(_c, \"FaceDetection\");","map":{"version":3,"names":["React","useState","useEffect","useRef","faceapi","jsxDEV","_jsxDEV","Fragment","_Fragment","FaceDetection","_s","imageUrl","setImageUrl","expressions","setExpressions","imageRef","loadModels","nets","ssdMobilenetv1","loadFromUri","faceExpressionNet","console","log","error","detectExpressions","current","detections","detectSingleFace","withFaceExpressions","warn","handleFileChange","event","file","target","files","Blob","URL","createObjectURL","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","alt","style","maxWidth","marginBottom","onLoad","Object","keys","length","entries","map","expression","confidence","toFixed","type","accept","onChange","_c","$RefreshReg$"],"sources":["/Users/dhanya/FaceAppDemo/FaceApp/src/FacialExpression.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport * as faceapi from 'face-api.js';\n\nconst FaceDetection = () => {\n  const [imageUrl, setImageUrl] = useState('');\n  const [expressions, setExpressions] = useState({});\n  const imageRef = useRef(null);\n\n  // Load Face API models on component mount\n  useEffect(() => {\n    const loadModels = async () => {\n      try {\n        await faceapi.nets.ssdMobilenetv1.loadFromUri('/models');\n        await faceapi.nets.faceExpressionNet.loadFromUri('/models');\n        console.log('Face API models loaded successfully.');\n      } catch (error) {\n        console.error('Error loading Face API models:', error);\n      }\n    };\n    loadModels();\n  }, []);\n\n  // Detect facial expressions\n  const detectExpressions = async () => {\n    if (!imageRef.current) return;\n\n    try {\n      const detections = await faceapi.detectSingleFace(imageRef.current)\n        .withFaceExpressions();\n\n      if (detections) {\n        setExpressions(detections.expressions);\n      } else {\n        setExpressions({});\n        console.warn('No face detected.');\n      }\n    } catch (error) {\n      console.error('Error detecting facial expressions:', error);\n    }\n  };\n\n  // Handle file selection and process the image\n  const handleFileChange = async (event) => {\n    const file = event.target.files[0];\n\n    if (!file) {\n      console.error('No file selected.');\n      return;\n    }\n\n    if (!(file instanceof Blob)) {\n      console.error('Invalid file format.');\n      return;\n    }\n\n    const imageUrl = URL.createObjectURL(file);\n    setImageUrl(imageUrl);\n\n    // Wait for the image to load before detecting expressions\n    setTimeout(detectExpressions, 500);\n  };\n\n  return (\n    <div>\n      <h2>Facial Expression Detection</h2>\n      {imageUrl && (\n        <>\n          <img\n            ref={imageRef}\n            src={imageUrl}\n            alt=\"User's image\"\n            style={{ maxWidth: '300px', marginBottom: '10px' }}\n            onLoad={detectExpressions}\n          />\n          <h3>Detected Expressions:</h3>\n          {Object.keys(expressions).length > 0 ? (\n            <ul>\n              {Object.entries(expressions).map(([expression, confidence]) => (\n                <li key={expression}>\n                  {expression}: {(confidence * 100).toFixed(2)}%\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p>No expressions detected.</p>\n          )}\n        </>\n      )}\n      <br />\n      <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n    </div>\n  );\n};\n\nexport default FaceDetection;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,KAAKC,OAAO,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAMc,QAAQ,GAAGZ,MAAM,CAAC,IAAI,CAAC;;EAE7B;EACAD,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMZ,OAAO,CAACa,IAAI,CAACC,cAAc,CAACC,WAAW,CAAC,SAAS,CAAC;QACxD,MAAMf,OAAO,CAACa,IAAI,CAACG,iBAAiB,CAACD,WAAW,CAAC,SAAS,CAAC;QAC3DE,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;MACrD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IACDP,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAACT,QAAQ,CAACU,OAAO,EAAE;IAEvB,IAAI;MACF,MAAMC,UAAU,GAAG,MAAMtB,OAAO,CAACuB,gBAAgB,CAACZ,QAAQ,CAACU,OAAO,CAAC,CAChEG,mBAAmB,CAAC,CAAC;MAExB,IAAIF,UAAU,EAAE;QACdZ,cAAc,CAACY,UAAU,CAACb,WAAW,CAAC;MACxC,CAAC,MAAM;QACLC,cAAc,CAAC,CAAC,CAAC,CAAC;QAClBO,OAAO,CAACQ,IAAI,CAAC,mBAAmB,CAAC;MACnC;IACF,CAAC,CAAC,OAAON,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC7D;EACF,CAAC;;EAED;EACA,MAAMO,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACxC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAElC,IAAI,CAACF,IAAI,EAAE;MACTX,OAAO,CAACE,KAAK,CAAC,mBAAmB,CAAC;MAClC;IACF;IAEA,IAAI,EAAES,IAAI,YAAYG,IAAI,CAAC,EAAE;MAC3Bd,OAAO,CAACE,KAAK,CAAC,sBAAsB,CAAC;MACrC;IACF;IAEA,MAAMZ,QAAQ,GAAGyB,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;IAC1CpB,WAAW,CAACD,QAAQ,CAAC;;IAErB;IACA2B,UAAU,CAACd,iBAAiB,EAAE,GAAG,CAAC;EACpC,CAAC;EAED,oBACElB,OAAA;IAAAiC,QAAA,gBACEjC,OAAA;MAAAiC,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnChC,QAAQ,iBACPL,OAAA,CAAAE,SAAA;MAAA+B,QAAA,gBACEjC,OAAA;QACEsC,GAAG,EAAE7B,QAAS;QACd8B,GAAG,EAAElC,QAAS;QACdmC,GAAG,EAAC,cAAc;QAClBC,KAAK,EAAE;UAAEC,QAAQ,EAAE,OAAO;UAAEC,YAAY,EAAE;QAAO,CAAE;QACnDC,MAAM,EAAE1B;MAAkB;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACFrC,OAAA;QAAAiC,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC7BQ,MAAM,CAACC,IAAI,CAACvC,WAAW,CAAC,CAACwC,MAAM,GAAG,CAAC,gBAClC/C,OAAA;QAAAiC,QAAA,EACGY,MAAM,CAACG,OAAO,CAACzC,WAAW,CAAC,CAAC0C,GAAG,CAAC,CAAC,CAACC,UAAU,EAAEC,UAAU,CAAC,kBACxDnD,OAAA;UAAAiC,QAAA,GACGiB,UAAU,EAAC,IAAE,EAAC,CAACC,UAAU,GAAG,GAAG,EAAEC,OAAO,CAAC,CAAC,CAAC,EAAC,GAC/C;QAAA,GAFSF,UAAU;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEf,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,gBAELrC,OAAA;QAAAiC,QAAA,EAAG;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC/B;IAAA,eACD,CACH,eACDrC,OAAA;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNrC,OAAA;MAAOqD,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,SAAS;MAACC,QAAQ,EAAE/B;IAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEV,CAAC;AAACjC,EAAA,CAzFID,aAAa;AAAAqD,EAAA,GAAbrD,aAAa;AA2FnB,eAAeA,aAAa;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}